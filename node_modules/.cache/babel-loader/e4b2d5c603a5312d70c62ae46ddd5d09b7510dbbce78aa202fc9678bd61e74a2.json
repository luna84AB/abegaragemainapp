{"ast":null,"code":"// import React, { useState, useEffect, useContext } from \"react\";\n// // import auth header \n// // import employeeAuthHeader from \"../util/auth.header\";\n\n// // Create the AuthContext \n// // const AuthContext = React.createContext();\n\n// // Export the AuthContext\n// export const useAuth = () => {\n//   return useContext(AuthContext);\n// }\n\n// // Create the AuthProvider \n// export const AuthProvider = ({ children }) => {\n//   const [isLogged, setIsLogged] = useState(false);\n//   const [isAdmin, setIsAdmin] = useState(false);\n//   const [employee, setEmployee] = useState(null);\n\n//   const value = { isLogged, isAdmin, setIsAdmin, setIsLogged, employee };\n\n//   useEffect(() => {\n//     // Retrieve the logged in user from local storage\n//     // const loggedInEmployee = employeeAuthHeader();\n//     // console.log(loggedInEmployee);\n//     loggedInEmployee.then((response) => {\n//       // console.log(response);\n//       if (response.employee_token) {\n//         setIsLogged(true);\n//         // 3 is the employee_role for admin\n//         if (response.employee_role === 3) {\n//           setIsAdmin(true);\n//         }\n//         setEmployee(response);\n//       }\n//     });\n//   }, []);\n\n//   return (\n//     // <AuthContext.Provider value={value}>\n//       {children}\n//     // </AuthContext.Provider>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/User/OneDrive/Desktop/AbeGarageApp-Project/CodeBase/abegaragemainapp/frontend/src/Context/AuthContext.js"],"sourcesContent":["// import React, { useState, useEffect, useContext } from \"react\";\n// // import auth header \n// // import employeeAuthHeader from \"../util/auth.header\";\n\n// // Create the AuthContext \n// // const AuthContext = React.createContext();\n\n// // Export the AuthContext\n// export const useAuth = () => {\n//   return useContext(AuthContext);\n// }\n\n// // Create the AuthProvider \n// export const AuthProvider = ({ children }) => {\n//   const [isLogged, setIsLogged] = useState(false);\n//   const [isAdmin, setIsAdmin] = useState(false);\n//   const [employee, setEmployee] = useState(null);\n\n//   const value = { isLogged, isAdmin, setIsAdmin, setIsLogged, employee };\n\n//   useEffect(() => {\n//     // Retrieve the logged in user from local storage\n//     // const loggedInEmployee = employeeAuthHeader();\n//     // console.log(loggedInEmployee);\n//     loggedInEmployee.then((response) => {\n//       // console.log(response);\n//       if (response.employee_token) {\n//         setIsLogged(true);\n//         // 3 is the employee_role for admin\n//         if (response.employee_role === 3) {\n//           setIsAdmin(true);\n//         }\n//         setEmployee(response);\n//       }\n//     });\n//   }, []);\n\n//   return (\n//     // <AuthContext.Provider value={value}>\n//       {children}\n//     // </AuthContext.Provider>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}